definitions:
  tracker.FinishWorkRequest:
    properties:
      task_id:
        type: string
      user_id:
        type: string
    type: object
  tracker.PassportNumber:
    properties:
      passportNumber:
        type: string
    type: object
  tracker.StartWorkRequest:
    properties:
      task_id:
        type: string
      user_id:
        type: string
    type: object
  tracker.TaskSpendTime:
    properties:
      spend_time_sec:
        type: integer
      task_id:
        type: string
      user_id:
        type: string
    type: object
  tracker.UpdateUser:
    properties:
      address:
        type: string
      id:
        type: string
      name:
        type: string
      passport_number:
        type: integer
      passport_series:
        type: integer
      patronymic:
        type: string
      surname:
        type: string
    type: object
  tracker.User:
    properties:
      address:
        type: string
      created_at:
        type: string
      id:
        type: string
      name:
        type: string
      passport_number:
        type: integer
      passport_series:
        type: integer
      patronymic:
        type: string
      surname:
        type: string
    type: object
info:
  contact: {}
paths:
  /users:
    get:
      description: Get a list of users with optional filters
      parameters:
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Number of users per page
        in: query
        name: per_page
        type: integer
      - description: User ID
        in: query
        name: id
        type: string
      - description: Passport series
        in: query
        name: passport_series
        type: integer
      - description: Passport number
        in: query
        name: passport_number
        type: integer
      - description: Surname
        in: query
        name: surname
        type: string
      - description: Name
        in: query
        name: name
        type: string
      - description: Patronymic
        in: query
        name: patronymic
        type: string
      - description: Address
        in: query
        name: address
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/tracker.User'
            type: array
        "400":
          description: Invalid input
          schema:
            type: string
        "500":
          description: Internal error
          schema:
            type: string
      summary: Get users
      tags:
      - users
    patch:
      consumes:
      - application/json
      description: Update user details
      parameters:
      - description: User to update
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/tracker.UpdateUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/tracker.User'
        "400":
          description: Invalid input
          schema:
            type: string
        "404":
          description: User not found
          schema:
            type: string
        "500":
          description: Internal error
          schema:
            type: string
      summary: Update an existing user
      tags:
      - users
    post:
      consumes:
      - application/json
      description: Create a new user with passport number
      parameters:
      - description: Passport number in format '1234 567890'
        in: body
        name: passportNumber
        required: true
        schema:
          $ref: '#/definitions/tracker.PassportNumber'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/tracker.User'
        "400":
          description: Invalid input
          schema:
            type: string
        "500":
          description: Internal error
          schema:
            type: string
      summary: Create a new user
      tags:
      - users
  /users/{user_id}:
    delete:
      description: Delete a user by ID
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: User deleted
          schema:
            type: string
        "400":
          description: Invalid user ID
          schema:
            type: string
        "404":
          description: User not found
          schema:
            type: string
        "500":
          description: Internal error
          schema:
            type: string
      summary: Delete a user
      tags:
      - users
  /users/{user_id}/report:
    get:
      description: Get the time spent on tasks by a user within a specified period
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: string
      - description: Start date in format 'DD-MM-YYYY'
        in: query
        name: start_date
        type: string
      - description: End date in format 'DD-MM-YYYY'
        in: query
        name: end_date
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/tracker.TaskSpendTime'
            type: array
        "400":
          description: Invalid input
          schema:
            type: string
        "404":
          description: User or task not found
          schema:
            type: string
        "500":
          description: Internal error
          schema:
            type: string
      summary: Get task spend times by user
      tags:
      - tasks
  /work/finish:
    post:
      consumes:
      - application/json
      description: Finish work on a task for a user
      parameters:
      - description: Finish work request
        in: body
        name: finishWorkRequest
        required: true
        schema:
          $ref: '#/definitions/tracker.FinishWorkRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Work finished
          schema:
            type: string
        "400":
          description: Invalid input
          schema:
            type: string
        "404":
          description: Task not found
          schema:
            type: string
        "500":
          description: Internal error
          schema:
            type: string
      summary: Finish work on a task
      tags:
      - work
  /work/start:
    post:
      consumes:
      - application/json
      description: Start work on a task for a user
      parameters:
      - description: Start work request
        in: body
        name: startWorkRequest
        required: true
        schema:
          $ref: '#/definitions/tracker.StartWorkRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Work started
          schema:
            type: string
        "400":
          description: Invalid input
          schema:
            type: string
        "500":
          description: Internal error
          schema:
            type: string
      summary: Start work on a task
      tags:
      - work
swagger: "2.0"
